/*
 * Program: Two Sum
 * Description:  Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

 * Date: 10/11/2018
 * Difficulty: easy
*/

#include <iostream>
#include <vector>
using namespace std;


vector<int> twoSum(vector<int>& nums, int target)
{
        vector<int>result;

        for (int i=0; i<nums.size(); i++)
        {
                for (int j=0; j<nums.size(); j++)
                {
                        if (nums[i]+nums[j] ==target && i != j)
                        {
                                result.push_back(i);
                                result.push_back(j);
                                return result;
                        }
                }
        }
}

int main()
{

        vector<int>vec = {2, 7, 11, 15}; //expected 0,1
        int target = 9;


        vector<int>vec = {3,2,4}; //expected 1,2
        int target = 6;


        vector<int>result = twoSum(vec, target);
        for (int i=0; i<result.size(); i++)
        {
                cout << result[i] << endl;
        }

        return 0;
}
